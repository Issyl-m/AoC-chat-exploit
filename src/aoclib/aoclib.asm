format PE GUI DLL
include 'C:\fasmw16726\INCLUDE\win32ax.inc'
include 'dplay.inc'
include 'aoc.inc'

entry DllMain
;/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
section '.data' data readable writeable executable
	;-------------------------------------------------------
	AOC_GUID			dd 0x5DE93F3F
					dw 0xFC90,0x4EE1
					db 0xAE,0x5A,0x63,0xDA,0xFA,0x05,0x59,0x50

	IID_IDirectPlayLobby2A		dd 0x1BB4AF80
					dw 0xA303,0x11D0
					db 0x9C,0x4F,0x00,0xA0,0xC9,0x05,0x42,0x5E

	IID_IDirectPlay4		dd 0x0AB1C530
					dw 0x4745,0x11D1
					db 0xA7,0xA1,0x00,0x00,0xF8,0x03,0xAB,0xFC

	DPSPGUID_TCPIP			dd 0x36E95EE0
					dw 0x8577,0x11CF
					db 0x96,0x0C,0x00,0x80,0xC7,0x53,0x4E,0x82

	DPAID_INet			dd 0xC4A54DA0
					dw 0xE0AF,0x11CF
					db 0x9C,0x4E,0x00,0xA0,0xC9,0x05,0x42,0x5E

	CLSID_DirectPlay		dd 0xD1EB6D20
					dw 0x8923,0x11D0
					db 0x9D,0x97,0x00,0xA0,0xC9,0x0A,0x43,0xCB
	;-------------------------------------------------------
	lpDPlayLobby4			dd ?
	;-------------------------------------------------------
	pg_MPSessionsArray		dd ?
	pg_MPSessionsArrayBase		dd ?
	cbMPSessionsArrayWritten	dd ?
	;-------------------------------------------------------
;/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
section '.text' code readable executable

proc DllMain,hinstDLL,fdwReason,lpvReserved
	xor eax,eax
	inc eax
	ret
endp

proc fnGetSessionsFromIp,pszIpAddress,pMPSessionsArray,cbMPSessionsCount
;----------------------------------------------------
;       Conectar
;----------------------------------------------------
	locals
		lpDPlayLobbyA	      dd ?
		lpDPlayLobby2A	      dd ?
		cbAddressBufferSize   dd ?
	endl

	push ebx edi esi

	mov [cbAddressBufferSize],0x400

	invoke DirectPlayLobbyCreateA,0,addr lpDPlayLobbyA,0,0,0

	mov ebx,[lpDPlayLobbyA]
	mov ebx,[ebx]
	virtual at ebx
		 .IDPLobby IDirectPlayLobby
	end virtual

	invoke .IDPLobby.QueryInterface,[lpDPlayLobbyA],addr IID_IDirectPlayLobby2A,addr lpDPlayLobby2A
	invoke .IDPLobby.Release,[lpDPlayLobbyA]

	mov ebx,[lpDPlayLobby2A]
	mov ebx,[ebx]
	virtual at ebx
		 .IDPLobby2 IDirectPlayLobby2
	end virtual
@@:
	invoke GlobalAlloc,GPTR,[cbAddressBufferSize]
	mov esi,eax

	invoke lstrlenA,[pszIpAddress]

	invoke .IDPLobby2.CreateAddress,[lpDPlayLobby2A],DPSPGUID_TCPIP,DPAID_INet,[pszIpAddress],eax,esi,addr cbAddressBufferSize
	or eax,eax
	jz @F

		invoke GlobalFree,esi
		jmp @B

@@:
	invoke .IDPLobby2.Release,[lpDPlayLobby2A]

	invoke CoInitialize,0
	invoke CoCreateInstance,addr CLSID_DirectPlay,0,CLSCTX_INPROC_SERVER,addr IID_IDirectPlay4,addr lpDPlayLobby4

	mov ebx,[lpDPlayLobby4]
	mov ebx,[ebx]
	virtual at ebx
		 .IDP4 IDirectPlay4
	end virtual

	invoke .IDP4.InitializeConnection,[lpDPlayLobby4],esi,0
	mov edi,eax

	invoke GlobalFree,esi

	or edi,edi
	jnz .EndOfFunction
;----------------------------------------------------
;       Enumerar sesiones disponibles
;----------------------------------------------------
	invoke GlobalAlloc,GPTR,sizeof.DPSESSIONDESC2
	mov edi,eax

	virtual at edi
		 .DPSESSIONDESC2 DPSESSIONDESC2
	end virtual

	mov [.DPSESSIONDESC2.dwSize],sizeof.DPSESSIONDESC2
	invoke RtlMoveMemory,addr .DPSESSIONDESC2.guidApplication,addr AOC_GUID,0x10

	mov eax,[pMPSessionsArray]
	mov eax,[eax]
	mov [pg_MPSessionsArray],eax
	mov [pg_MPSessionsArrayBase],eax

	mov eax,[cbMPSessionsCount]
	mov [cbMPSessionsArrayWritten],eax

	invoke .IDP4.EnumSessions,[lpDPlayLobby4],edi,0,addr fnEnumSessionsCallback,0,DPENUMSESSIONS_AVAILABLE

	invoke GlobalFree,edi
.EndOfFunction:
	pop esi edi ebx
	ret
endp
;//////////////////////////////////////////////////////////////////////////////////////////
proc fnOpenSession,lpGuidInstance,lpszPlayerName,lpdwDPID
;----------------------------------------------------
;       Unir al pre-game chat
;----------------------------------------------------
	locals
		DPName	DPNAME
	endl

	push ebx edi

	mov ebx,[lpDPlayLobby4]
	mov ebx,[ebx]

	virtual at ebx
		 .IDP4 IDirectPlay4
	end virtual

	invoke GlobalAlloc,GPTR,sizeof.DPSESSIONDESC2
	mov edi,eax

	virtual at edi
		 .DPSESSIONDESC2 DPSESSIONDESC2
	end virtual

	mov [.DPSESSIONDESC2.dwSize],sizeof.DPSESSIONDESC2
	invoke RtlMoveMemory,addr .DPSESSIONDESC2.guidApplication,addr AOC_GUID,0x10
	invoke RtlMoveMemory,addr .DPSESSIONDESC2.guidInstance,[lpGuidInstance],0x10

	invoke .IDP4.Open,[lpDPlayLobby4],edi,DPOPEN_JOIN
	push eax
	invoke GlobalFree,edi
	pop eax
	or eax,eax
	jnz .EndOfFunction
;----------------------------------------------------
;       Crear jugador local
;----------------------------------------------------
	mov eax,[lpszPlayerName]

	mov [DPName.dwSize],sizeof.DPNAME
	mov [DPName.dwFlags],0
	mov [DPName.lpszShortName],eax
	mov [DPName.lpszLongName],eax

	invoke .IDP4.CreatePlayer,[lpDPlayLobby4],[lpdwDPID],addr DPName,NULL,NULL,0,0

.EndOfFunction:
	pop edi ebx
	ret
endp
;//////////////////////////////////////////////////////////////////////////////////////////
proc fnCloseSession
	push ebx

	mov ebx,[lpDPlayLobby4]
	mov ebx,[ebx]

	virtual at ebx
		 .IDP4 IDirectPlay4
	end virtual

	invoke .IDP4.Close,[lpDPlayLobby4]

	pop ebx
	ret
endp
;//////////////////////////////////////////////////////////////////////////////////////////
proc fnRecvMsg,lpdwRecvMsgIdFrom,lpdwRecvMsgIdTo,lpRecvBuffer,lpdwRecvMsgDataSize
	push ebx

	mov ebx,[lpDPlayLobby4]
	mov ebx,[ebx]

	virtual at ebx
		 .IDP4 IDirectPlay4
	end virtual

	invoke .IDP4.Receive,[lpDPlayLobby4],[lpdwRecvMsgIdFrom],[lpdwRecvMsgIdTo],DPRECEIVE_ALL,[lpRecvBuffer],[lpdwRecvMsgDataSize]

	pop ebx
	ret
endp
;//////////////////////////////////////////////////////////////////////////////////////////
proc fnSendMsg,lpdwSendMsgIdFrom,lpdwSendMsgIdTo,lpSendBuffer,lpdwSendMsgDataSize
	push ebx

	mov ebx,[lpDPlayLobby4]
	mov ebx,[ebx]

	virtual at ebx
		 .IDP4 IDirectPlay4
	end virtual

	invoke .IDP4.Send,[lpDPlayLobby4],[lpdwSendMsgIdFrom],[lpdwSendMsgIdTo],DPSEND_GUARANTEED,[lpSendBuffer],[lpdwSendMsgDataSize]

	pop ebx
	ret
endp
;//////////////////////////////////////////////////////////////////////////////////////////
proc fnGetPlayerName,DPID,lpszOutputName
	MAX_PLAYER_NAME_LENGTH = 32

	locals
		cbDPlayerNameSize dd ?
	endl

	push ebx edi esi

	mov ebx,[lpDPlayLobby4]
	mov ebx,[ebx]

	virtual at ebx
		 .IDP4 IDirectPlay4
	end virtual

	xor eax,eax
	mov [cbDPlayerNameSize],eax

.fnAdjustBufferSizeLoop:
	invoke GlobalAlloc,GPTR,[cbDPlayerNameSize]
	mov edi,eax

	virtual at edi
		 .edi.DPNAME DPNAME
	end virtual

	invoke .IDP4.GetPlayerName,[lpDPlayLobby4],[DPID],edi,addr cbDPlayerNameSize
	cmp eax,ERROR_INCORRECT_BUFFER_SIZE
	jnz .GetPlayerNameSize

		invoke GlobalFree,edi
		jmp .fnAdjustBufferSizeLoop

.GetPlayerNameSize:
	mov esi,eax
	or eax,eax
	jnz .EndOfFunction ; eax==success

	cmp [cbDPlayerNameSize],MAX_PLAYER_NAME_LENGTH
	jnb @F
		push [cbDPlayerNameSize]
		jmp .CopyPlayerName
	@@:
		push MAX_PLAYER_NAME_LENGTH
.CopyPlayerName:
	invoke RtlMoveMemory,[lpszOutputName],[.edi.DPNAME.lpszShortName]

.EndOfFunction:
	invoke GlobalFree,edi

	mov eax,esi

	pop esi edi ebx
	ret
endp
;//////////////////////////////////////////////////////////////////////////////////////////
proc fnEnumSessionsCallback,lpThisSessionDesc,lpdwTimeOut,dwFlags,lpContext
	test byte[dwFlags],DPENUMSESSIONS_AVAILABLE
	jz .fnGetSessionInformation

		xor eax,eax
		ret

.fnGetSessionInformation:
	push ebx edi esi

	mov ebx,[lpThisSessionDesc]
	;----------------------------------------------
	virtual at ebx
		 .ebx.DPSESSIONDESC2 DPSESSIONDESC2
	end virtual
	virtual at edi
		 .edi.MP_SESSION_INFORMATION _MP_SESSION_INFORMATION
	end virtual
	;----------------------------------------------
	mov edi,[pg_MPSessionsArray]
	mov eax,edi

	mov ecx,sizeof._MP_SESSION_INFORMATION
	add [pg_MPSessionsArray],ecx

	sub eax,[pg_MPSessionsArrayBase]
	xor edx,edx
	div ecx
	;----------------------------------------------
	cmp eax,[cbMPSessionsArrayWritten]
	jnb .EndOfFunction

		invoke RtlMoveMemory,addr .edi.MP_SESSION_INFORMATION.guidInstance,addr .ebx.DPSESSIONDESC2.guidInstance,16

		invoke lstrlenA,[.ebx.DPSESSIONDESC2.lpszSessionName]
		inc eax
		mov esi,eax

		invoke GlobalAlloc,GPTR,addr eax+6 ; "[x/y] "

		mov byte[eax],'['
		mov ecx,[.ebx.DPSESSIONDESC2.dwCurrentPlayers]
		or ecx,'0'
		mov byte[eax+1],cl
		mov byte[eax+2],'/'
		mov ecx,[.ebx.DPSESSIONDESC2.dwMaxPlayers]
		or ecx,'0'
		mov byte[eax+3],cl
		mov word[eax+4],'] '

		mov [.edi.MP_SESSION_INFORMATION.lpszSessName],eax

		invoke RtlMoveMemory,addr eax+6,[.ebx.DPSESSIONDESC2.lpszSessionName],esi
	;----------------------------------------------
.EndOfFunction:
	pop esi edi ebx

	xor eax,eax
	inc eax
	ret
endp
;/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
section '.idata' import data readable writeable
library kernel32,'kernel32.dll',\
	dplayx,'dplayx.dll',\
	ole32,'ole32'

 import kernel32,\
	GlobalAlloc,'GlobalAlloc',\
	GlobalFree,'GlobalFree',\
	lstrlenA,'lstrlenA',\
	RtlMoveMemory,'RtlMoveMemory'

 import dplayx,\
	DirectPlayLobbyCreateA,'DirectPlayLobbyCreateA'

 import ole32,\
	CoInitialize,'CoInitialize',\
	CoCreateInstance,'CoCreateInstance'
;/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
section '.edata' export data readable writeable
 export 'aoclib.dll',\
	fnGetSessionsFromIp,'GetSessionsFromIp',\
	fnOpenSession,'OpenSession',\
	fnCloseSession,'CloseSession',\
	fnSendMsg,'SendMsg',\
	fnRecvMsg,'RecvMsg',\
	fnGetPlayerName,'GetPlayerName'
;/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
section '.reloc' fixups data readable discardable